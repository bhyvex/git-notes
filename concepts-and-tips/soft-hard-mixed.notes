= Easy way to remember what git reset's soft/hard/mixed do

^^loosely based on http://gitster.livejournal.com/25150.html^^

    Assume you start from a "everything is committed and golden" state.  Let's
    pretend you came to this starting point via a {{{git checkout}}}: and then
    you edit a bunch of stuff, compile/test, and then {{{git add}}} and {{{git
    commit}}}:

        $ git checkout mywork
        ...edit edit edit...
        $ git add ...
        $ git commit

    If at this point you do a {{{git reset}}}, here's how the type of reset
    ("soft", "hard", or the default, which is "mixed") affects things:

        $ git checkout mywork
                    # --hard resets to this point
        ...edit edit edit...
                    # --mixed (default) resets to this point
        $ git add ...
                    # --soft resets to this point
        $ git commit

    Also note, as gitster says, that {{{git commit --amend}}} makes the
    {{{git reset --soft}}} mostly redundant.
