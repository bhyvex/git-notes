# git performance

todo: mention repack

Someone asked me this:

> I started soliciting the use of git within <deleted> the other day and while
> it's been looked at with interest, there's a concern over performance on
> Windows.

My reply:

Git-on-windows performance compared to git-on-Linux?  Sure, that's not as
fast.

Performance compared to SVN or VSS?  Don't make me laugh!  They're not even in
the same league!  People from other systems complain that until they get used
to it, it seems like the operation failed -- it comes back so fast!

Don't take my word for it.  I'd be glad to demo it if you like.  Anyone who
can prove to me properly (no subjective opinions; we have to test!) that VSS
or SVN does something faster, on the same hardware, will get a dinner from me
at Taj Banjara in Hyderabad next time they visit!

I'll even do the git conversion for them and send them the git tree, and we
can do the comparision by webex  :-) 

Regards,

Sitaram

PS: You can't have *everything* on Windows.  You *do* need one machine -- just
one, and it can be woefully underpowered, the kind that can just barely run
XP, leave alone Vista -- to act as the central server.  I would *not*
recommend that to be Windows.  You *could* get away with a virtual machine
running Linux inside Windows if you cannot spare an old box for the server if
you like; it'll be fast enough...]

PPS: Background on git's peformance.

One of the things git did was to try and optimise disk storage by adopting an
aggressive delta compression technique.  Most version control systems give you
this, but they only do deltas for **consecutive versions of the same file**.
Git not only tries to optimise across non-adjacent versions of a file (like if
you removed a huge bunch of lines, and then added them back again), it also
leverages similarities with **other** files.

The reason it does this is that it really tracks content, not just filenames.

Anyway, all this means that a packed git repo is much, much, smaller than a
repo in any other VCS.  (The Mozilla tree sizes, at one time, were:

    One full checkout   :       350 MB
    CVS repo            :       2.7 GB
    SVN repo            :       8.2 GB
    git repo            :       450 MB

Read that again: the entire history of Mozilla in barely a third more space
than a normal checkout!

So what does all this have to do with performance?  Well, although all this
was done purely for disk space reasons, it turned out to have a surprising
effect on performance.

It turned out (and in hindsight this was obvious) that, since the disk was the
slowest component, keeping a small amount on the disk and making the CPU grunt
a little was far, far, faster than not doing all this compression.

In fact, people found that a git checkout is faster than a "cp -a", simply
because of this tradeoff.  Until you get used to it, this is a little
mind-blowing.

Anyway the bottom line is, performance is not an issue.
